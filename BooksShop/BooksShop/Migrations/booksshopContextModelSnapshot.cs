// <auto-generated />
using System;
using BooksShop.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BooksShop.Migrations
{
    [DbContext(typeof(booksshopContext))]
    partial class booksshopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BooksShop.Models.Autor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("dob");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Autors");
                });

            modelBuilder.Entity("BooksShop.Models.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasColumnName("description")
                        .HasDefaultValueSql("('No description!')");

                    b.Property<string>("Edition")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("edition");

                    b.Property<string>("PublishedAt")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("published_at");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BooksShop.Models.BooksAutor", b =>
                {
                    b.Property<long>("IdBook")
                        .HasColumnType("bigint")
                        .HasColumnName("id_book");

                    b.Property<long>("IdAutor")
                        .HasColumnType("bigint")
                        .HasColumnName("id_autor");

                    b.HasKey("IdBook", "IdAutor")
                        .HasName("PK__Books_Au__1F1B2A9A1AE02E28");

                    b.HasIndex("IdAutor");

                    b.ToTable("Books_Autors");
                });

            modelBuilder.Entity("BooksShop.Models.BooksAutor", b =>
                {
                    b.HasOne("BooksShop.Models.Autor", "IdAutorNavigation")
                        .WithMany("BooksAutors")
                        .HasForeignKey("IdAutor")
                        .HasConstraintName("FK__Books_Aut__id_au__3C69FB99")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BooksShop.Models.Book", "IdBookNavigation")
                        .WithMany("BooksAutors")
                        .HasForeignKey("IdBook")
                        .HasConstraintName("fk_books_to_autors")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdAutorNavigation");

                    b.Navigation("IdBookNavigation");
                });

            modelBuilder.Entity("BooksShop.Models.Autor", b =>
                {
                    b.Navigation("BooksAutors");
                });

            modelBuilder.Entity("BooksShop.Models.Book", b =>
                {
                    b.Navigation("BooksAutors");
                });
#pragma warning restore 612, 618
        }
    }
}
